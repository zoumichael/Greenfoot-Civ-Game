#BlueJ class context
comment0.target=Unit
comment0.text=\r\n\ Superclass\ of\ all\ units.\ Contains\ the\ method\ and\ parameters\ need\ to\ move\ this\r\n\ unit\ around\ the\ map,\ and\ attack.\r\n\ \r\n\ @author\ Michael\ Zou\r\n\ @version\ April\ 25,\ 2018\r\n
comment1.params=x\ y\ t
comment1.target=Unit(int,\ int,\ int)
comment1.text=\r\n\ The\ construtor\ for\ objects\ of\ class\ Unit,\ initalizes\ the\ coordinates\ as\r\n\ well\ as\ the\ number\ of\ moves\ this\ unit\ can\ make.\r\n
comment10.params=u\ dmgType
comment10.target=void\ takeDamage(Unit,\ java.lang.String)
comment10.text=\r\n\ Method\ that\ causes\ a\ unit\ to\ take\ damage.\r\n\ \r\n\ @param\ \ \ u\ \ \ the\ unit\ that's\ dealing\ damage\ to\ this\ unit.\r\n\ @param\ \ \ dmgType\ \ the\ type\ of\ damage\ that\ is\ being\ inflicted.\r\n
comment11.params=temp
comment11.target=void\ setSelected(boolean)
comment11.text=\r\n\ Mutator\ method\ for\ the\ 'isSelected'\ variable.\r\n\ \r\n\ @param\ \ temp\ \ \ \ the\ new\ value\ of\ isSelected\r\n
comment12.params=
comment12.target=boolean\ getSelected()
comment12.text=\r\n\ Accessor\ method\ for\ the\ 'isSelected'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ isSelected\ variable\r\n
comment13.params=a
comment13.target=void\ setCanAct(boolean)
comment13.text=\r\n\ Mutator\ method\ for\ the\ 'canAct'\ variable.\r\n\ \r\n\ @param\ \ a\ \ \ \ the\ new\ value\ of\ canAct\r\n
comment14.params=
comment14.target=boolean\ getCanAct()
comment14.text=\r\n\ Accessor\ method\ for\ the\ 'canAct'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ canAct\ variable\r\n
comment15.params=m
comment15.target=void\ setCanMove(boolean)
comment15.text=\r\n\ Mutator\ method\ for\ the\ 'canMove'\ variable.\r\n\ \r\n\ @param\ \ m\ \ \ \ the\ new\ value\ of\ canMove\r\n
comment16.params=
comment16.target=boolean\ getCanMove()
comment16.text=\r\n\ Accessor\ method\ for\ the\ 'canMove'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ canMove\ variable\r\n
comment17.params=a
comment17.target=void\ setCanAttack(boolean)
comment17.text=\r\n\ Mutator\ method\ for\ the\ 'canAttack'\ variable.\r\n\ \r\n\ @param\ \ a\ \ \ \ the\ new\ value\ of\ canAttack\r\n
comment18.params=
comment18.target=boolean\ getCanAttack()
comment18.text=\r\n\ Accessor\ method\ for\ the\ 'canAttack'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ canAttack\ variable\r\n
comment19.params=mta
comment19.target=void\ setAttackAfterMove(boolean)
comment19.text=\r\n\ Mutator\ method\ for\ the\ 'canAttackAfterMove'\ variable.\r\n\ \r\n\ @param\ \ mta\ \ \ \ the\ new\ value\ of\ canAttackAfterMove\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Act\ -\ do\ whatever\ the\ Unit\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment20.params=
comment20.target=boolean\ getAttackAfterMove()
comment20.text=\r\n\ Accessor\ method\ for\ the\ 'canAttackAfterMove'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ canAttackAfterMove\ variable\r\n
comment21.params=atm
comment21.target=void\ setMoveAfterAttack(boolean)
comment21.text=\r\n\ Mutator\ method\ for\ the\ 'canMoveAfterAttack'\ variable.\r\n\ \r\n\ @param\ \ atm\ \ \ \ the\ new\ value\ of\ canMoveAfterAttack\r\n
comment22.params=
comment22.target=boolean\ getMoveAfterAttack()
comment22.text=\r\n\ Accessor\ method\ for\ the\ 'canMoveAfterAttack'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ canMoveAfterAttack\ variable\r\n
comment23.params=
comment23.target=boolean\ getDimmerAdded()
comment23.text=\r\n\ Accessor\ method\ for\ the\ 'dimmer'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ dimmer\ variable\r\n
comment24.params=d
comment24.target=void\ setDimmerAdded(boolean)
comment24.text=\r\n\ Mutator\ method\ for\ the\ 'dimmer'\ variable.\r\n\ \r\n\ @param\ \ d\ \ \ \ the\ new\ value\ of\ dimmer\r\n
comment25.params=
comment25.target=int\ getNumMoves()
comment25.text=\r\n\ Accessor\ method\ for\ the\ 'numMoves'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ canMove\ variable\r\n
comment26.params=moves
comment26.target=void\ setNumMoves(int)
comment26.text=\r\n\ Mutator\ method\ for\ the\ 'numMoves'\ variable.\r\n\ \r\n\ @param\ \ moves\ \ \ \ the\ new\ value\ of\ numMoves\r\n
comment27.params=r
comment27.target=void\ setIsRanged(boolean)
comment27.text=\r\n\ Mutator\ method\ for\ the\ 'isRanged'\ variable.\r\n\ \r\n\ @param\ \ r\ \ \ \ the\ new\ value\ of\ isRanged\r\n
comment28.params=
comment28.target=boolean\ getIsRanged()
comment28.text=\r\n\ Accessor\ method\ for\ the\ 'isRanged'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ isRanged\ variable\r\n
comment29.params=h
comment29.target=void\ setHealth(int)
comment29.text=\r\n\ Mutator\ method\ for\ the\ 'health'\ variable.\r\n\ \r\n\ @param\ \ h\ \ \ \ the\ new\ value\ of\ health\r\n
comment3.params=
comment3.target=void\ initialization()
comment3.text=\r\n\ Method\ that\ is\ called\ when\ the\ object\ is\ initialized.\r\n
comment30.params=
comment30.target=int\ getHealth()
comment30.text=\r\n\ Accessor\ method\ for\ the\ 'health'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ health\ variable\r\n
comment31.params=a
comment31.target=void\ setArmor(int)
comment31.text=\r\n\ Mutator\ method\ for\ the\ 'armor'\ variable.\r\n\ \r\n\ @param\ \ a\ \ \ \ the\ new\ value\ of\ armor\r\n
comment32.params=
comment32.target=int\ getArmor()
comment32.text=\r\n\ Accessor\ method\ for\ the\ 'armor'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ armor\ variable\r\n
comment33.params=a
comment33.target=void\ setAttack(int)
comment33.text=\r\n\ Mutator\ method\ for\ the\ 'attack'\ variable.\r\n\ \r\n\ @param\ \ a\ \ \ \ the\ new\ value\ of\ attack\r\n
comment34.params=
comment34.target=int\ getAttack()
comment34.text=\r\n\ Accessor\ method\ for\ the\ 'attack'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ attack\ variable\r\n
comment35.params=r
comment35.target=void\ setRegen(int)
comment35.text=\r\n\ Mutator\ method\ for\ the\ 'healthRegen'\ variable.\r\n\ \r\n\ @param\ \ r\ \ \ \ the\ new\ value\ of\ healthRegen\r\n
comment36.params=
comment36.target=int\ getRegen()
comment36.text=\r\n\ Accessor\ method\ for\ the\ 'healthRegen'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ healthRegen\ variable\r\n
comment37.params=r
comment37.target=void\ setRange(int)
comment37.text=\r\n\ Mutator\ method\ for\ the\ 'range'\ variable.\r\n\ \r\n\ @param\ \ r\ \ \ \ the\ new\ value\ of\ range\r\n
comment38.params=
comment38.target=int\ getRange()
comment38.text=\r\n\ Accessor\ method\ for\ the\ 'range'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ range\ variable\r\n
comment39.params=hI
comment39.target=void\ setHealthIndicator(UnitHealth)
comment39.text=\r\n\ Mutator\ method\ for\ the\ 'healthIndicator'\ variable.\r\n\ \r\n\ @param\ \ hI\ \ \ \ the\ reference\ of\ the\ new\ UnitHealth.\r\n
comment4.params=
comment4.target=void\ whenClicked()
comment4.text=\r\n\ Method\ that\ handles\ what\ happens\ after\ the\ unit\ is\ clicked.\ \r\n
comment40.params=
comment40.target=UnitHealth\ getHealthIndicator()
comment40.text=\r\n\ Accessor\ method\ for\ the\ 'healthIndicator'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ healthIndicator\ variable\r\n
comment41.params=uc
comment41.target=void\ setUnitClass(java.lang.String)
comment41.text=\r\n\ Mutator\ method\ for\ the\ 'unitClass'\ variable.\r\n\ \r\n\ @param\ \ uc\ \ \ \ the\ new\ value\ of\ unitClass.\r\n
comment42.params=
comment42.target=java.lang.String\ getUnitClass()
comment42.text=\r\n\ Accessor\ method\ for\ the\ 'unitClass'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ unitClass\ variable\r\n
comment43.params=n
comment43.target=void\ setName(java.lang.String)
comment43.text=\r\n\ Mutator\ method\ for\ the\ 'name'\ variable.\r\n\ \r\n\ @param\ \ n\ \ \ \ the\ new\ value\ of\ name.\r\n
comment44.params=
comment44.target=java.lang.String\ getName()
comment44.text=\r\n\ Accessor\ method\ for\ the\ 'name'\ variable.\r\n\ \r\n\ @return\ \ \ \ \ the\ name\ variable\r\n
comment5.params=
comment5.target=void\ determinePossibilities()
comment6.params=
comment6.target=void\ clearPossibilities()
comment6.text=\r\n\ Method\ that\ is\ called\ when\ the\ object's\ possibilties\ (moving,\ attacking,\ etc.)\ are\ reset.\r\n
comment7.params=x\ y\ movesLeft
comment7.target=void\ getMoveTiles(int,\ int,\ int)
comment7.text=\r\n\ The\ recursive\ method\ that\ is\ used\ to\ find\ all\ the\ tiles\ that\ the\ unit\ can\ \r\n\ move\ onto\ and\ hightlight\ them.\r\n\ \r\n\ @param\ \ x\ \ \ \ the\ x\ coordinate\r\n\ @param\ \ y\ \ \ \ the\ y\ coordinate\r\n\ @param\ \ movesLeft\ \ \ \ the\ number\ of\ moves\ avaliable\r\n
comment8.params=
comment8.target=void\ displayAllTiles()
comment8.text=\r\n\ Method\ that\ displays\ all\ tiles\ of\ interest.\r\n
comment9.params=tileType
comment9.target=void\ displayTiles(java.lang.String)
comment9.text=\r\n\ Create\ Select\ Tiles\ based\ on\ the\ the\ tiles\ that\ this\ unit\ can\ move\ to.\r\n
numComments=45
